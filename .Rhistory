barplot(table(dado))
dado <- sample(x=1:6, size=10000, replace = TRUE)
print(dado)
sum(dado == 3)
mean(dado == 3)  #ou sum(dado == 3)/10000
barplot(table(dado))
table(idoso$Survived)
idoso <- dados[dados$Age >= 60,]
treinamento <- iris[1:n,]
iris
iris <- iris[sample(nrow(iris)),]
iris
n <- round(0.8*nrow(iris))
n
treinamento <- iris[1:n,]
teste <- iris[-(1:n),]
summary(teste)
ggplot(data = treinamento, aes(x = Petal.Length, y = Petal.Width, col = Species)) +
geom_point(size = 2, alpha = 0.5)+
theme_minimal()
iris
iris <- iris[sample(nrow(iris)),]
iris
n <- round(0.8*nrow(iris))
n
treinamento <- iris[1:n,]
teste <- iris[-(1:n),]
summary(teste)
ggplot(data = treinamento, aes(x = Petal.Length, y = Petal.Width, col = Species)) +
geom_point(size = 2, alpha = 0.5)+
theme_minimal()
library(ggplot2)
iris
iris <- iris[sample(nrow(iris)),]
iris
n <- round(0.8*nrow(iris))
n
treinamento <- iris[1:n,]
teste <- iris[-(1:n),]
summary(teste)
ggplot(data = treinamento, aes(x = Petal.Length, y = Petal.Width, col = Species)) +
geom_point(size = 2, alpha = 0.5)+
theme_minimal()
library(randomForest)
cancer <- read.table(file = "cancer.csv", sep = ",", header = TRUE)
cancer <- na.omit(cancer)
str(cancer)
n <- round(0.8*nrow(cancer))
indices_treino <- sample(1:nrow(cancer), size = n, replace = FALSE)
treino <- cancer[indices_treino,]
install.packages(randomForest)
install.packages('randomForest')
library(randomForest)
install.packages('randomForest')
library(randomForest)
library(randomForest)
install.packages('randomForest')
library(randomForest)
cancer <- read.table(file = "cancer.csv", sep = ",", header = TRUE)
cancer <- na.omit(cancer)
library(randomForest)
library(rvest)
library(dplyr)
library(stringr)
library(geobr)
library(ggplot2)
url <- "https://pt.wikipedia.org/wiki/Lista_de_unidades_federativas_do_Brasil_por_alfabetiza%C3%A7%C3%A3o"
html <- read_html(url)
tabelas <- html |>
html_elements("table") |>
html_table()
View(tabelas)
alfabetizacao <- tabelas[[3]]
View(alfabetizacao)
alfabetizacao <- alfabetizacao[,c(2,3)]
names(alfabetizacao) <- c("estado", "taxa")
names(alfabetizacao)
parte1 <- str_replace_all(alfabetizacao$taxa, pattern = ",", replacement = ".")
parte2 <- str_replace_all(string = parte1, pattern = "%", replacement = "")
parte_final <- as.numeric(parte2)
alfabetizacao$taxa <- parte_final
minas <- read_state(code_state = "MG")
ggplot(data = minas) +
theme_minimal() +
geom_sf()
municipioMG <- read_municipality(code_muni = "MG")
ggplot(data = municipioMG) +
theme_minimal()+
geom_sf()
estados <- read_state()
estados$name_state
order(estados$name_state)
estados[2,]
estados <- estados[order(estados$name_state),]
estados
alfabetizacao <- alfabetizacao[order(alfabetizacao$estado),]
alfabetizacao$estado
estados <- estados[order(estados$name_state),]
estados$taxa <- alfabetizacao$taxa
ggplot(data = estados, aes(fill = taxa)) +
geom_sf()+
scale_fill_gradient(low = '#56b1f7', high = '#132b43')
gc()
library(rvest)
library(dplyr)
url <- "https://www.bbc.com/portuguese/articles/cql3lwgl3ldo"
html <- read_html(url)
html
titulo <- html |>
html_elements('h1') |>
html_text2()
titulo <- ("Editar DNA é ético? O debate sobre tecnologia que promete revolucionar vidas")
noticia <- html |>
html_elements("p.bbc-hhl7in") |>
html_text2()
noticia <- paste(noticia, collapse= " ")
artigos <- data.frame(titulo, noticia)
library(tidytext)
library(tidytext)
library(dplyr)
library(ggplot2)
library(tidyr)
library(stopwords)
library(rvest)
url <- "https://www.bbc.com/portuguese/articles/c3dv8yy3d8jo"
html <- read_html(url)
html |>
html_elements("p") |>
html_text2()
html |>
html_elements("p.bbc-h7hl7in") |>
html_text2()
html |>
html_elements("p.bbc-hhl7in") |>
html_text2()
paste("a","b")
html <- read_html(url)
texto <- html |>
html_elements("p.bbc-hhl7in") |>
html_text2()
paste0(texto)
url <- "https://www.bbc.com/portuguese/articles/cql3lwgl3ldo"
html <- read_html(url)
html
titulo <- html |>
html_elements('h1') |>
html_text2()
titulo <- ("Editar DNA é ético? O debate sobre tecnologia que promete revolucionar vidas")
noticia <- html |>
html_elements("p.bbc-hhl7in") |>
html_text2()
noticia <- paste(noticia, collapse= " ")
artigos <- data.frame(titulo, noticia)
library(tidytext)
artigos|>
unnest_tokens(output = words, input = noticia) |>
count(words) |>
arrange(desc(n))
library(rvest)
library(dplyr)
url <- "https://www.bbc.com/portuguese/articles/cql3lwgl3ldo"
html <- read_html(url)
html
titulo <- html |>
html_elements('h1') |>
html_text2()
titulo <- ("Editar DNA é ético? O debate sobre tecnologia que promete revolucionar vidas")
noticia <- html |>
html_elements("p.bbc-hhl7in") |>
html_text2()
noticia <- paste(noticia, collapse= " ")
setwd("~/Documentos/Estatística Computacional")
dados <- read.table(file = "grilo.txt", sep = ",", header = "TRUE")
dados <- read.table(file = "grilo.txt", sep = ',')
View(dados)
dados <- read.table(file = "grilo.txt", sep = ',',header = TRUE)
View(dados)
ggplot(data = dados, aes(x = temperatura, y = frequencia))+
geom_point()
library(ggplot2)
dados <- read.table(file = "grilo.txt", sep = ',',header = TRUE)
ggplot(data = dados, aes(x = temperatura, y = frequencia))+
geom_point()
ggplot(data = dados, aes(x = frequencia)) +
geom_histogram(bins = 10)+
theme_minimal()
cor(dados)
ggplot(data = dados, aes(x = temperatura, y = frequencia))+
geom_point() +
geom_minimal() +
geom_smooth(method = "lm")
ggplot(data = dados, aes(x = temperatura, y = frequencia))+
geom_point() +
theme_minimal() +
geom_smooth(method = "lm")
modelo_linear <- lm(formula = frequencia ~ temperatura, data = dados)
modelo_linear
summary(dados$temperatura)
predict(modelo_linear, newdata = w)
w <- data.frame(temperatura = c(21,23.6,30.9))
predict(modelo_linear, newdata = w)
dados <- penguins
library(palmerpenguins)
dados <- penguins
dados <- na.omit(dados)
sum(dados)
summary(dados)
View(dados)
ggplot(data = dados, aes(x = body_mass_g, y = bill_length_mm))+
geom_col()+
geom_smooth(method = "lm")
ggplot(data = dados, aes(x = body_mass_g, y = bill_length_mm))+
geom_point()+
geom_smooth(method = "lm")
cor(dados)
cor(dados$bill_depth_mm, dados$bill_length_mm)
cor(dados$flipper_length_mm, dados$body_mass_g)
ggplot(data = dados, aes(x = body_mass_g, y = flipper_length_mm))+
geom_point()+
geom_smooth(method = "lm")
ggplot(data = dados, aes(x = body_mass_g, y = flipper_length_mm))+
geom_point()+
geom_smooth(method = "lm")
ggplot(data = dados, aes(x = body_mass_g, y = bill_length_mm))+
geom_point()+
geom_smooth(method = "lm")
ggplot(data = dados, aes(x = body_mass_g, y = flipper_length_mm))+
geom_point()+
geom_smooth(method = "lm")
ggplot(data = dados, aes(x = body_mass_g, y = flipper_length_mm))+
geom_point(fill = "red")+
geom_smooth(method = "lm")
ggplot(data = dados, aes(x = body_mass_g, y = flipper_length_mm))+
geom_point(color = "red")+
geom_smooth(method = "lm")
ggplot(data = dados, aes(x = body_mass_g, y = flipper_length_mm))+
geom_point(color = "pink")+
geom_smooth(method = "lm")
ggplot(data = dados, aes(x = body_mass_g, y = flipper_length_mm))+
geom_point(color = "#fc03cf")+
geom_smooth(method = "lm")
ggplot(data = dados, aes(x = flipper_length_mm, y = body_mass_g))+
geom_point(color = "#fc03cf")+
geom_smooth(method = "lm")
ggplot(data = dados, aes(x = flipper_length_mm, y = body_mass_g))+
geom_point(color = "#fc03cf")+
geom_smooth(method = "lm") +
theme_minimal()
ggplot(data = dados, aes(x = flipper_length_mm, y = body_mass_g))+
geom_point(color = species)+
geom_smooth(method = "lm") +
theme_minimal()
ggplot(data = dados, aes(x = flipper_length_mm, y = body_mass_g), color = species)+
geom_point(color = "#fc03cf")+
geom_smooth(method = "lm") +
theme_minimal()
ggplot(data = dados, aes(x = flipper_length_mm, y = body_mass_g), color = species)+
geom_point()+
geom_smooth(method = "lm") +
theme_minimal()
ggplot(data = dados, aes(x = flipper_length_mm, y = body_mass_g, color = species))+
geom_point(color = "#fc03cf")+
geom_smooth(method = "lm") +
theme_minimal()
ggplot(data = dados, aes(x = flipper_length_mm, y = body_mass_g, color = species))+
geom_point()+
geom_smooth(method = "lm") +
theme_minimal()
library(dplyr)
dados |>
filter(species == "Gentoo") |>
select(flipper_length_mm, body_mass_g) |>
cor()
dados |>
filter(species == "Gentoo") |>
select(flipper_length_mm, body_mass_g) |>
cor()
dados |>
filter(species == "Chinstrap") |>
select(flipper_length_mm, body_mass_g) |>
cor()
dados |>
filter(species == "Adelie") |>
select(flipper_length_mm, body_mass_g) |>
cor()
modelo2 <- lm(formula = dados$flipper_length_mm ~ dados$body_mass_g + dados$bill_length_mm)
modelo2
modelo2 <- lm(formula = flipper_length_mm ~ body_mass_g + bill_length_mm, data = dados)
modelo2
summary(modelo2)
