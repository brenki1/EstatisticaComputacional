barplot(table(dado))
dado <- sample(x=1:6, size=10000, replace = TRUE)
print(dado)
sum(dado == 3)
mean(dado == 3)  #ou sum(dado == 3)/10000
barplot(table(dado))
table(idoso$Survived)
idoso <- dados[dados$Age >= 60,]
treinamento <- iris[1:n,]
iris
iris <- iris[sample(nrow(iris)),]
iris
n <- round(0.8*nrow(iris))
n
treinamento <- iris[1:n,]
teste <- iris[-(1:n),]
summary(teste)
ggplot(data = treinamento, aes(x = Petal.Length, y = Petal.Width, col = Species)) +
geom_point(size = 2, alpha = 0.5)+
theme_minimal()
iris
iris <- iris[sample(nrow(iris)),]
iris
n <- round(0.8*nrow(iris))
n
treinamento <- iris[1:n,]
teste <- iris[-(1:n),]
summary(teste)
ggplot(data = treinamento, aes(x = Petal.Length, y = Petal.Width, col = Species)) +
geom_point(size = 2, alpha = 0.5)+
theme_minimal()
library(ggplot2)
iris
iris <- iris[sample(nrow(iris)),]
iris
n <- round(0.8*nrow(iris))
n
treinamento <- iris[1:n,]
teste <- iris[-(1:n),]
summary(teste)
ggplot(data = treinamento, aes(x = Petal.Length, y = Petal.Width, col = Species)) +
geom_point(size = 2, alpha = 0.5)+
theme_minimal()
library(randomForest)
cancer <- read.table(file = "cancer.csv", sep = ",", header = TRUE)
cancer <- na.omit(cancer)
str(cancer)
n <- round(0.8*nrow(cancer))
indices_treino <- sample(1:nrow(cancer), size = n, replace = FALSE)
treino <- cancer[indices_treino,]
install.packages(randomForest)
install.packages('randomForest')
library(randomForest)
install.packages('randomForest')
library(randomForest)
library(randomForest)
install.packages('randomForest')
library(randomForest)
cancer <- read.table(file = "cancer.csv", sep = ",", header = TRUE)
cancer <- na.omit(cancer)
library(randomForest)
library(rvest)
library(dplyr)
library(stringr)
library(geobr)
library(ggplot2)
url <- "https://pt.wikipedia.org/wiki/Lista_de_unidades_federativas_do_Brasil_por_alfabetiza%C3%A7%C3%A3o"
html <- read_html(url)
tabelas <- html |>
html_elements("table") |>
html_table()
View(tabelas)
alfabetizacao <- tabelas[[3]]
View(alfabetizacao)
alfabetizacao <- alfabetizacao[,c(2,3)]
names(alfabetizacao) <- c("estado", "taxa")
names(alfabetizacao)
parte1 <- str_replace_all(alfabetizacao$taxa, pattern = ",", replacement = ".")
parte2 <- str_replace_all(string = parte1, pattern = "%", replacement = "")
parte_final <- as.numeric(parte2)
alfabetizacao$taxa <- parte_final
minas <- read_state(code_state = "MG")
ggplot(data = minas) +
theme_minimal() +
geom_sf()
municipioMG <- read_municipality(code_muni = "MG")
ggplot(data = municipioMG) +
theme_minimal()+
geom_sf()
estados <- read_state()
estados$name_state
order(estados$name_state)
estados[2,]
estados <- estados[order(estados$name_state),]
estados
alfabetizacao <- alfabetizacao[order(alfabetizacao$estado),]
alfabetizacao$estado
estados <- estados[order(estados$name_state),]
estados$taxa <- alfabetizacao$taxa
ggplot(data = estados, aes(fill = taxa)) +
geom_sf()+
scale_fill_gradient(low = '#56b1f7', high = '#132b43')
gc()
setwd("~/Documentos/EstatÃ­stica Computacional")
url <- "https://www.timeout.com/film/best-horror-films"
library(rvest)
library(dplyr)
library(stringr)
library(geobr)
library(ggplot2)
detach("package:geobr", unload = TRUE)
html |>
html_elements("h3._h3_cuogz_1")
html <- read_html(url)
html
html <- read_html(url)
url <- "https://www.timeout.com/film/best-horror-films"
html <- read_html(url)
html
html |>
html_elements("h3._h3_cuogz_1")
html |>
html_elements("h3._h3_cuogz_1") |>
html_text2()
nomes <- html |>
html_elements("h3._h3_cuogz_1") |>
html_text2()
str_extract_all(string = names,pattern = "^\\d+")
str_extract_all(string = nomes,pattern = "^\\d+")
posicao <- str_extract_all(string = nomes,pattern = "^\\d+")
posicao <- unlist(posicao)
posicao
posicao <- as.numeric(posicao)
posicao
anos <- str_extract_all(string = nomes, pattern = "\\\\d+")
anos
anos <- str_extract_all(string = nomes, pattern = "d+")
anos
anos <- str_extract_all(string = nomes, pattern = "^\\\\d+")
anos
anos <- str_extract_all(string = nomes, pattern = "^()")
anos
anos <- str_extract_all(string = nomes, pattern = "()")
anos
View(anos)
anos <- str_extract_all(string = nomes, pattern = "^(d)")
anos
anos <- str_extract_all(string = nomes, pattern = "(d)")
anos
View(anos)
View(anos)
anos <- str_extract_all(string = nomes, pattern = numeric)
anos
anos <- str_extract_all(string = nomes, pattern = c(()))
anos <- str_extract_all(string = nomes, pattern = c(()))
anos
anos <- str_extract_all(string = nomes, pattern = "[1-9]")
anos
anos <- str_extract_all(string = nomes, pattern = "\\d[1-9]")
anos
anos <- str_extract_all(string = nomes, pattern = "{1,4}[1-9]")
anos
anos <- str_extract_all(string = nomes, pattern = "\\(\\d+\\)")
anos
anos <- str_extract_all(string = nomes, pattern = "\\(\\d+\\)$")
anos
anos <- str_extract_all(string = nomes, pattern = "\\(\\d+\\)$")
anos
unlist(anos)
anos <- unlist(anos)
str_remove_all(nomes, "^\\d+\\. \\s+")
str_remove_all(nomes, "^\\d+\\.\\s+")
titulos <- str_remove_all("\\s+\\(\\d+\\)$")
titulos <- str_remove_all(titulos,"\\s+\\(\\d+\\)$")
titulos <- str_remove_all(titulos,"\\s+\\(\\d+\\)$")
titulos <- str_remove_all(nomes, "^\\d+\\.\\s+")
titulos <- str_remove_all(titulos,"\\s+\\(\\d+\\)$")
titulos
filmes_horror <- data.frame(posicao, titulos, anos)
View(filmes_horror)
anos <- as.numeric(anos)
anos <- str_extract_all(string = nomes, pattern = "\\(\\d+\\)$")
anos
anos <- unlist(anos)
anos <- as.numeric(anos)
anos <- unlist(str_extract_all((anos, pattern = "\\d+")))
anos <- str_extract_all(string = nomes, pattern = "\\(\\d+\\)$")
anos
anos <- unlist(str_extract_all(anos, pattern = "\\d+"))
anos <- as.numeric
anos <- str_extract_all(string = nomes, pattern = "\\(\\d+\\)$")
anos
anos <- unlist(str_extract_all(anos, pattern = "\\d+"))
anos <- as.numeric(anos)
titulos <- str_remove_all(nomes, "^\\d+\\.\\s+")
titulos <- str_remove_all(titulos,"\\s+\\(\\d+\\)$")
titulos
filmes_horror <- data.frame(posicao, titulos, anos)
writr.csv(filmeshorror, file = "filmeshorro.csv", row.names = FALSE)
write.csv(filmeshorror, file = "filmeshorro.csv", row.names = FALSE)
write.csv(filmes_horror, file = "filmeshorro.csv", row.names = FALSE)
write.csv(filmes_horror, file = "filmeshorror.csv", row.names = FALSE)
url2 <- "https://www.bosshunting.com.au/entertainment/movies/best-movies-imdb/"
html2 <- read_html(url2)
html2
nomes <- html2 |>
html_elements("wp-block-list")
html_text2()
nomes <- html2 |>
html_elements("wp-block-list")
html_text2()
nomes <- html2 |>
html_elements("wp-block-list")
html_text2()
nomes <- html2 |>
html_elements("wp-block-list")
html_text2()
nomes <- html2 |>
html_elements("wp-block-list")
html_text2()
nomes <- html2 |>
html_elements("wp-block-list")
html_text2()
nomes <- html2 |>
html_elements("wp-block-list")
html_text2()
nomes <- html2 |>
html_elements("wp-block-list")
html_text2()
nomes <- html2 |>
html_elements("wp-block-list")
html_text2()
nomes <- html2 |>
html_elements("wp-block-list")
html_text2()
nomes <- html2 |>
html_elements("wp-block-list")
html_text2()
nomes <- html2 |>
html_elements("wp-block-list")
html_text2()
nomes <- html2 |>
html_elements("wp-block-list")
html_text2()
nomes <- html2 |>
html_elements("wp-block-list")
html_text2()
nomes <- html2 |>
html_elements("wp-block-list")
html_text2()
nomes <- html2 |>
html_elements("wp-block-list")
html_text2()
nomes <- html2 |>
html_elements("wp-block-list")
html_text2()
nomes <- html2 |>
html_elements("wp-block-list")
html_text2()
nomes <- html2 |>
html_elements("wp-block-list")
html_text2()
nomes <- html2 |>
html_elements("wp-block-list")
html_text2()
nomes <- html2 |>
html_elements("wp-block-list")
html_text2()
nomes <- html2 |>
html_elements("wp-block-list")
html_text2()
nomes <- html2 |>
html_elements("wp-block-list")
html_text2()
nomes <- html2 |>
html_elements("wp-block-list")
html_text2()
nomes <- html2 |>
html_elements("wp-block-list")
html_text2()
nomes <- html2 |>
html_elements("wp-block-list")
html_text2()
nomes <- html2 |>
html_elements("wp-block-list")
html_text2()
nomes <- html2 |>
html_elements("wp-block-list")
html_text2()
nomes <- html2 |>
html_elements("wp-block-list")
html_text2()
nomes <- html2 |>
html_elements("wp-block-list")
html_text2()
nomes <- html2 |>
html_elements("wp-block-list")
html_text2()
nomes <- html2 |>
html_elements("wp-block-list")
html_text2()
nomes <- html2 |>
html_elements("wp-block-list")
html_text2()
nomes <- html2 |>
html_elements("wp-block-list")
html_text2()
nomes <- html2 |>
html_elements("ol.wp-block-list")
html_elements("li")
html2
url2 <- "https://www.bosshunting.com.au/entertainment/movies/best-movies-imdb/"
html2 <- read_html(url2)
html2
nomes <- html2 |>
html_elements("ol.wp-block-list")
html_elements("li")
html2 |>
html_elements("ol.wp-block-list")
html_text2()
html_elements("li")
html2 |>
html_elements("ol.wp-block-list")
html_elements("li")
html_text2()
html2 |>
html_elements("ol.wp-block-list") |>
html_elements("li") |>
html_text2()
View(nomes)
nomes1 <- html2 |>
html_elements("ol.wp-block-list") |>
html_elements("li") |>
html_text2()
View(nomes)
nomes1 <- html2 |>
html_elements("ol.wp-block-list") |>
html_elements("li") |>
html_text2()
View(nomes)
nomes[[1]]
nomes1 <- html2 |>
html_elements("ol.wp-block-list") |>
html_elements("li") |>
html_text2()
nomes1
titulos1 <- str_extract_all(nomes1, pattern = "\\d+\\")
titulos1 <- str_extract_all(nomes1, pattern = "^\\d+\\")
titulos1 <- str_extract_all(nomes1,"^\\d+\\")
titulos1 <- str_extract_all(nomes1,"^\\d+")
View(titulos1)
titulos1 <- str_extract_all(nomes1,"\\d+")
titulos1 <- str_extract_all(nomes1,"\\d+(\\d)\\")
titulos1 <- str_remove_all(nomes1,"\\d+(\\d)\\")
titulos1 <- str_remove_all(nomes1,"^\\d+(\\d)\\")
titulos1 <- str_remove_all(nomes1,"^\\d+")
titulos1
